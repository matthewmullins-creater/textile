
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  status: 'status',
  role: 'role',
  avatarUrl: 'avatarUrl',
  avatarPublicId: 'avatarPublicId',
  googleId: 'googleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cin: 'cin',
  phone: 'phone',
  email: 'email',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductionLineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  capacity: 'capacity',
  isActive: 'isActive',
  targetOutput: 'targetOutput',
  location: 'location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AssignmentScalarFieldEnum = {
  id: 'id',
  workerId: 'workerId',
  productionLineId: 'productionLineId',
  position: 'position',
  date: 'date',
  shift: 'shift',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  description: 'description',
  category: 'category',
  unitPrice: 'unitPrice',
  imageUrl: 'imageUrl',
  imagePublicId: 'imagePublicId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PerformanceRecordScalarFieldEnum = {
  id: 'id',
  workerId: 'workerId',
  productId: 'productId',
  productionLineId: 'productionLineId',
  date: 'date',
  piecesMade: 'piecesMade',
  shift: 'shift',
  timeTaken: 'timeTaken',
  errorRate: 'errorRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isGroup: 'isGroup',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  joinedAt: 'joinedAt',
  lastReadAt: 'lastReadAt',
  isActive: 'isActive'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderId: 'senderId',
  content: 'content',
  messageType: 'messageType',
  isEdited: 'isEdited',
  isDeleted: 'isDeleted',
  fileUrl: 'fileUrl',
  fileName: 'fileName',
  fileSize: 'fileSize',
  filePublicId: 'filePublicId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageReadReceiptScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  readAt: 'readAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  content: 'content',
  data: 'data',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  refreshToken: 'refreshToken',
  deviceInfo: 'deviceInfo',
  ipAddress: 'ipAddress',
  isActive: 'isActive',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  SUPERADMIN: 'SUPERADMIN'
};

exports.Status = exports.$Enums.Status = {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  FILE: 'FILE',
  VIDEO: 'VIDEO',
  SYSTEM: 'SYSTEM'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  NEW_MESSAGE: 'NEW_MESSAGE',
  MENTION: 'MENTION',
  SYSTEM: 'SYSTEM',
  PERFORMANCE_ALERT: 'PERFORMANCE_ALERT'
};

exports.Prisma.ModelName = {
  User: 'User',
  Worker: 'Worker',
  ProductionLine: 'ProductionLine',
  Assignment: 'Assignment',
  Product: 'Product',
  PerformanceRecord: 'PerformanceRecord',
  Conversation: 'Conversation',
  ConversationParticipant: 'ConversationParticipant',
  Message: 'Message',
  MessageReadReceipt: 'MessageReadReceipt',
  Notification: 'Notification',
  UserSession: 'UserSession'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/brian/Documents/Projects/Alignerr/Code-RL/textile/backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/brian/Documents/Projects/Alignerr/Code-RL/textile/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  USER\n  ADMIN\n  SUPERADMIN\n}\n\nenum Status {\n  active\n  inactive\n  suspended\n}\n\nmodel User {\n  id             Int     @id @default(autoincrement())\n  email          String  @unique\n  password       String\n  username       String  @unique\n  firstName      String?\n  lastName       String?\n  phone          String? @unique\n  status         Status  @default(active)\n  role           Role    @default(USER)\n  avatarUrl      String? // Cloudinary image URL\n  avatarPublicId String? // Cloudinary public_id for management\n  googleId       String? @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  Conversation            Conversation[]            @relation(\"ConversationCreator\")\n  ConversationParticipant ConversationParticipant[]\n  Message                 Message[]\n  MessageReadReceipt      MessageReadReceipt[]\n  Notification            Notification[]\n  UserSession             UserSession[]\n}\n\nmodel Worker {\n  id                 Int                 @id @default(autoincrement())\n  name               String\n  cin                String              @unique\n  phone              String?             @unique\n  email              String?             @unique\n  role               String?\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  assignments        Assignment[]\n  performanceRecords PerformanceRecord[]\n}\n\nmodel ProductionLine {\n  id                 Int                 @id @default(autoincrement())\n  name               String\n  description        String?\n  capacity           Int?\n  isActive           Boolean             @default(true)\n  targetOutput       Int?\n  location           String?\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  assignments        Assignment[]\n  performanceRecords PerformanceRecord[]\n}\n\nmodel Assignment {\n  id               Int            @id @default(autoincrement())\n  workerId         Int\n  productionLineId Int\n  position         String\n  date             DateTime\n  shift            String\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  worker           Worker         @relation(fields: [workerId], references: [id])\n  productionLine   ProductionLine @relation(fields: [productionLineId], references: [id])\n\n  @@index([productionLineId, date])\n  @@index([workerId, date])\n}\n\nmodel Product {\n  id                 Int                 @id @default(autoincrement())\n  name               String\n  code               String              @unique // SKU or product code\n  description        String?\n  category           String?\n  unitPrice          Float?\n  imageUrl           String? // Cloudinary image URL\n  imagePublicId      String? // Cloudinary public_id for management\n  isActive           Boolean             @default(true)\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  performanceRecords PerformanceRecord[]\n}\n\nmodel PerformanceRecord {\n  id               Int            @id @default(autoincrement())\n  workerId         Int\n  productId        Int\n  productionLineId Int\n  date             DateTime\n  piecesMade       Int\n  shift            String?\n  timeTaken        Float\n  errorRate        Float\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n  worker           Worker         @relation(fields: [workerId], references: [id])\n  product          Product        @relation(fields: [productId], references: [id])\n  productionLine   ProductionLine @relation(fields: [productionLineId], references: [id])\n\n  @@index([workerId, date])\n  @@index([productId, date])\n  @@index([productionLineId, date])\n}\n\nmodel Conversation {\n  id        Int      @id @default(autoincrement())\n  name      String? // For group chats\n  isGroup   Boolean  @default(false)\n  createdBy Int?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  creator      User?                     @relation(\"ConversationCreator\", fields: [createdBy], references: [id])\n  participants ConversationParticipant[]\n  messages     Message[]\n\n  @@index([updatedAt])\n}\n\nmodel ConversationParticipant {\n  id             Int       @id @default(autoincrement())\n  conversationId Int\n  userId         Int\n  joinedAt       DateTime  @default(now())\n  lastReadAt     DateTime?\n  isActive       Boolean   @default(true)\n\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([conversationId, userId])\n  @@index([userId])\n}\n\nmodel Message {\n  id             Int         @id @default(autoincrement())\n  conversationId Int\n  senderId       Int\n  content        String\n  messageType    MessageType @default(TEXT)\n  isEdited       Boolean     @default(false)\n  isDeleted      Boolean     @default(false)\n  fileUrl        String? // Cloudinary URL for files\n  fileName       String? // Original filename\n  fileSize       Int? // File size in bytes\n  filePublicId   String? // Cloudinary public_id for management\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  conversation Conversation         @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  sender       User                 @relation(fields: [senderId], references: [id])\n  readReceipts MessageReadReceipt[]\n\n  @@index([conversationId, createdAt])\n  @@index([senderId])\n}\n\nmodel MessageReadReceipt {\n  id        Int      @id @default(autoincrement())\n  messageId Int\n  userId    Int\n  readAt    DateTime @default(now())\n\n  message Message @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([messageId, userId])\n}\n\nmodel Notification {\n  id        Int              @id @default(autoincrement())\n  userId    Int\n  type      NotificationType\n  title     String\n  content   String\n  data      Json? // Additional data (like messageId, conversationId, etc.)\n  isRead    Boolean          @default(false)\n  createdAt DateTime         @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isRead])\n  @@index([createdAt])\n}\n\nenum MessageType {\n  TEXT\n  IMAGE\n  FILE\n  VIDEO\n  SYSTEM\n}\n\nenum NotificationType {\n  NEW_MESSAGE\n  MENTION\n  SYSTEM\n  PERFORMANCE_ALERT\n}\n\nmodel UserSession {\n  id           Int      @id @default(autoincrement())\n  userId       Int\n  refreshToken String   @unique\n  deviceInfo   String? // User-Agent or device identifier\n  ipAddress    String? // IP address for security tracking\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  expiresAt    DateTime\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([refreshToken])\n  @@index([expiresAt])\n}\n",
  "inlineSchemaHash": "d23edf7e59a742bb16277896e793cc2c785fe3b74f74c19ab339690c2b8f6d31",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarPublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationCreator\"},{\"name\":\"ConversationParticipant\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationParticipantToUser\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToUser\"},{\"name\":\"MessageReadReceipt\",\"kind\":\"object\",\"type\":\"MessageReadReceipt\",\"relationName\":\"MessageReadReceiptToUser\"},{\"name\":\"Notification\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"UserSession\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"}],\"dbName\":null},\"Worker\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToWorker\"},{\"name\":\"performanceRecords\",\"kind\":\"object\",\"type\":\"PerformanceRecord\",\"relationName\":\"PerformanceRecordToWorker\"}],\"dbName\":null},\"ProductionLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"targetOutput\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignments\",\"kind\":\"object\",\"type\":\"Assignment\",\"relationName\":\"AssignmentToProductionLine\"},{\"name\":\"performanceRecords\",\"kind\":\"object\",\"type\":\"PerformanceRecord\",\"relationName\":\"PerformanceRecordToProductionLine\"}],\"dbName\":null},\"Assignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionLineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shift\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"worker\",\"kind\":\"object\",\"type\":\"Worker\",\"relationName\":\"AssignmentToWorker\"},{\"name\":\"productionLine\",\"kind\":\"object\",\"type\":\"ProductionLine\",\"relationName\":\"AssignmentToProductionLine\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imagePublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"performanceRecords\",\"kind\":\"object\",\"type\":\"PerformanceRecord\",\"relationName\":\"PerformanceRecordToProduct\"}],\"dbName\":null},\"PerformanceRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productionLineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"piecesMade\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shift\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeTaken\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"errorRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"worker\",\"kind\":\"object\",\"type\":\"Worker\",\"relationName\":\"PerformanceRecordToWorker\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"PerformanceRecordToProduct\"},{\"name\":\"productionLine\",\"kind\":\"object\",\"type\":\"ProductionLine\",\"relationName\":\"PerformanceRecordToProductionLine\"}],\"dbName\":null},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isGroup\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationCreator\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationToConversationParticipant\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":null},\"ConversationParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastReadAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToConversationParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ConversationParticipantToUser\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"enum\",\"type\":\"MessageType\"},{\"name\":\"isEdited\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"fileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"filePublicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageToUser\"},{\"name\":\"readReceipts\",\"kind\":\"object\",\"type\":\"MessageReadReceipt\",\"relationName\":\"MessageToMessageReadReceipt\"}],\"dbName\":null},\"MessageReadReceipt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageReadReceipt\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageReadReceiptToUser\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":null},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

